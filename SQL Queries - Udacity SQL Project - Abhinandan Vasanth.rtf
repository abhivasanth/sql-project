{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Light;\f2\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red62\green62\blue62;\red255\green255\blue255;\red62\green62\blue62;
\red53\green53\blue53;}
{\*\expandedcolortbl;;\cssrgb\c30980\c30980\c30980;\cssrgb\c100000\c100000\c100000;\cssrgb\c30980\c30980\c30980;
\cssrgb\c27059\c27059\c27059;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs48 \cf0 \ul \ulc0 UDACITY SQL Project - Abhinandan Vasanth
\b0\fs24 \ulnone \
\
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /* Query 1: a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.*/
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs28 \cf0 WITH family_Category\
AS\
	(SELECT c.category_id, c.name\
	FROM category c\
	WHERE c.name IN\
	('Animation', 'Children', 'Classics', 'Comedy', 'Family','Music'))\
\
SELECT DISTINCT \
			 f.title AS film_name,\
			 c.name AS Category_Name,\
			 COUNT(rental_id) OVER \
				(PARTITION BY c.name \
			 	 ORDER BY f.title ASC)\
FROM film f\
INNER JOIN film_category fc\
ON f.film_Id = fc.film_id\
INNER JOIN category c\
ON fc.category_id = c.category_id\
INNER JOIN family_category flc\
ON c.category_id = flc.category_id\
INNER JOIN inventory i\
ON f.film_id = i.film_id\
INNER JOIN rental r\
ON i.inventory_id = r.inventory_id\
ORDER BY 2,1;
\f0\fs24 \
\
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs28 \cf4 \cb3 \expnd0\expndtw0\kerning0
/* Query 2: 
\fs32 \cf2 \cb3 \outl0\strokewidth0 \strokec2 provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories
\fs28 \cf4 \cb3 \outl0\strokewidth0 */\
WITH family_Category\
AS\
	(SELECT DISTINCT c.name\
	FROM category c\
	WHERE c.name IN\
	('Animation', 'Children', 'Classics', 'Comedy', 'Family','Music'))\
\
SELECT film_name, film_category, rental_duration,\
standard_quartile\
FROM\
(\
	SELECT f.title AS film_name,\
	c.name AS film_category,\
	f.rental_duration AS rental_duration,\
	NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile\
	FROM film f\
	INNER JOIN film_category fc\
	ON f.film_Id = fc.film_id\
	INNER JOIN category c\
	ON fc.category_id = c.category_id\
)a\
WHERE film_category IN\
	(SELECT name\
 	FROM family_category)\
ORDER BY 3 DESC\
\
\
/*Query 3: \
\pard\pardeftab720\sl540\sa300\partightenfactor0
\cf2 \cb3 \outl0\strokewidth0 \strokec2 provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination of film category for each corresponding rental duration category. The resulting table should have three columns:\
	\'95	Category\
	\'95	Rental length category\
	\'95	Count*/\
\pard\pardeftab560\slleading20\partightenfactor0
\cf5 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 WITH family_Category\
AS\
	(SELECT DISTINCT c.name\
	FROM category c\
	WHERE c.name IN\
	('Animation', 'Children', 'Classics', 'Comedy', 'Family','Music'))\
	SELECT film_category,\
	standard_quartile,\
	COUNT(rental_duration) AS count\
FROM\
(\
	SELECT f.title AS film_name,\
	c.name AS film_category,\
	f.rental_duration AS rental_duration,\
	NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile\
	FROM film f\
	INNER JOIN film_category fc\
	ON f.film_Id = fc.film_id\
	INNER JOIN category c\
	ON fc.category_id = c.category_id\
	WHERE c.name IN (SELECT name\
	 FROM family_category))\
a\
GROUP BY film_category, standard_quartile\
ORDER BY 1,2,3\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl540\sa300\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f2 \cf5 /* Query 4:\cf5 \
Write a query that returns the store ID for the store, the year and month and the number of rental orders each store has fulfilled for that month. Your table should include a column for each of the following: year, month, store ID and count of rental orders fulfilled during that month.*/\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\fs28 \cf4 \cb3 \expnd0\expndtw0\kerning0
\

\f2\fs24 \cf5 \cb1 \kerning1\expnd0\expndtw0 SELECT date_part('month', rental_date) AS Month,\
date_part('year', rental_date) AS year,\
s.store_id, COUNT(rental_id) AS Count_rentals\
FROM rental r\
JOIN staff s\
ON r.staff_id = s.staff_id\
GROUP BY 1,2,3\
ORDER BY 4 DESC\
\
\
\
/*Query 5:
\f0\fs28 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Can you write a query to capture the customer name, month and year of payment, and total payment amount for each month by these top 10 paying customers?*/
\f2\fs24 \cf5 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf5 SELECT 	DATE_TRUNC('month',payment_date) AS Month,\
				CONCAT(first_name,' ', last_name) AS FullName, \
				COUNT(payment_id) AS pay_countpermon, \
				SUM(amount) AS pay_amount\
FROM customer c\
INNER JOIN payment p\
ON c.customer_id = p.customer_id\
GROUP BY 2,1\
ORDER BY 2,1\
\
/*Query 6:\
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write a query to compare the payment amounts in each successive month.\'a0Repeat this for each of these 10 paying customers. Also, it will be tremendously helpful if you can identify the customer name who paid the most difference in terms of payments
\f0 . In this query, we also see that Eleanor Hunt is the customer who paid the most difference in terms of payment*/
\f2\fs24 \cf5 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf5 \
WITH CTE AS\
	(\
		SELECT 	CONCAT(first_name,' ', last_name) AS FullName,\
						COUNT(payment_id) AS paymentCount,\
						SUM(amount) AS payment_amount,\
						DATE_TRUNC('month',payment_date) AS Month\
		FROM customer c\
		INNER JOIN payment p\
		ON c.customer_id = p.customer_id\
		WHERE c.customer_id IN (\
														SELECT customer_id\
														FROM\
														(\
														SELECT c.customer_id, SUM(amount) AS Payment\
														FROM customer c\
														INNER JOIN payment p\
														ON c.customer_id = p.customer_id\
														GROUP BY 1\
														ORDER BY 2 DESC\
														LIMIT 10\
														)a)\
	  GROUP BY 1, 4\
	 )\
\
\
	SELECT FullName,\
					Month ,\
					payment_amount,\
					LEAD(payment_amount,1) OVER (ORDER BY fullname, month),\
					LEAD(payment_amount,1) OVER (ORDER BY fullname, month) - payment_amount AS payment_difference\
	FROM CTE\
	ORDER BY 5 DESC}